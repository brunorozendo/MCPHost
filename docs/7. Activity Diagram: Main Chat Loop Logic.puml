@startuml ChatLoopActivity
!theme vibrant

title Main Chat Loop Logic

start
:Initialize MCP Clients and Ollama Client;
:Display "Interactive chat started";

while (User Input is not "exit"?) is (true)
    :Display "You: " prompt;
    :Read User Input;
    if (User Input is "exit"?) then (yes)
        break
    endif
    :Add User Input to Conversation History;

    :Set requiresFollowUp = true;
    while (requiresFollowUp?) is (true)
        :Set requiresFollowUp = false;
        :Construct OllamaApi.ChatRequest (with history, tools);
        :Start Loading Animation ("LLM is thinking...");
        :OllamaApiClient.chat(request);
        :Stop Loading Animation;

        if (Ollama API call failed?) then (yes)
            :Log error;
            :Display error to user;
            break
        else (no)
            :Get AssistantMessage from ChatResponse;
            :Add AssistantMessage to Conversation History;

            if (AssistantMessage has content?) then (yes)
                :Display LLM content (stripping <think> tags);
            else if (AssistantMessage only <think> and no tool_calls?) then (yes)
                :Display LLM <think> content;
            endif

            if (AssistantMessage has tool_calls?) then (yes)
                :Set requiresFollowUp = true;
                partition "Process Tool Calls" {
                    while (more ToolCalls to process?) is (true)
                        :Get next ToolCall;
                        :Display "LLM -> Tool Call: ...";
                        :Parse tool arguments;
                        if (Argument parsing failed?) then (yes)
                            :Log error;
                            :Add error message to Conversation History;
                        else (no)
                            :Start Loading Animation ("Executing tool...");
                            :McpToolClientManager.callTool();
                            :Stop Loading Animation;
                            if (Tool execution failed?) then (yes)
                                :Log error;
                                :Format error as ToolResult;
                            else (no)
                                :Format success as ToolResult;
                            endif
                            :Display "Tool -> Result: ...";
                            :Add ToolResult to Conversation History;
                        endif
                    endwhile
                }
            endif
        endif
    endwhile
endwhile

:Close MCP Clients;
:Display "mcphost exiting";
stop
@enduml